import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(
          seedColor: Colors.black,
          brightness: Brightness.dark,
        ),
        useMaterial3: true,
      ),
      home: const HomePage(title: 'Osint Lite'),
      debugShowCheckedModeBanner: false,
    );
  }
}

class HomePage extends StatelessWidget {
  const HomePage({super.key, required this.title});
  final String title;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          forceMaterialTransparency: true,
          leading: IconButton(
            icon: const Icon(Icons.search, size: 35),
            onPressed: () {},
          ),
          actions: const [
            Text(
              "Osint Lite  ",
              style: TextStyle(
                  fontSize: 40,
                  fontFamily: "Billabong",
                  fontWeight: FontWeight.bold),
            ),
          ],
        ),
        resizeToAvoidBottomInset: false,
        body: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Padding(
              padding: EdgeInsets.only(left: 40.0, top: 50.0),
              child: Text(
                "Mots clés",
                style: TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
            Padding(
              padding:
                  const EdgeInsets.symmetric(horizontal: 40.0, vertical: 20.0),
              child: TextField(
                style: const TextStyle(
                    color: Colors.black), // Couleur du texte en noir
                decoration: InputDecoration(
                    labelText: "Mot clés",
                    labelStyle: const TextStyle(
                        color: Colors.black), // Couleur du label en noir
                    filled: true, // Active le remplissage du fond
                    fillColor:
                        Colors.white, // Couleur de fond du champ en blanc
                    border: const OutlineInputBorder(
                      borderRadius: BorderRadius.all(
                          Radius.circular(20.0)), // Bordure arrondie
                      borderSide: BorderSide(
                          color: Colors.grey), // Couleur de la bordure en gris
                    ),
                    enabledBorder: const OutlineInputBorder(
                      borderRadius: BorderRadius.all(Radius.circular(
                          20.0)), // Bordure arrondie lorsqu'il est activé
                      borderSide: BorderSide(
                          color: Colors.grey), // Couleur de la bordure en gris
                    ),
                    focusedBorder: const OutlineInputBorder(
                      borderRadius: BorderRadius.all(Radius.circular(
                          20.0)), // Bordure arrondie lorsqu'il est en focus
                      borderSide: BorderSide(
                          color: Colors.blue), // Couleur de la bordure en bleu
                    ),
                    suffixIcon: IconButton(
                      icon: const Icon(Icons.search,
                          color: Colors.grey), // Icône à droite
                      onPressed: () {},
                    )),
              ),
            ),
            const Padding(
              padding: EdgeInsets.only(left: 40.0, top: 20.0,right: 50.0),
              child: Row(
                children: [
                  // Texte "Format de fichiers"
                  Text(
                    "Format de fichiers",
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  // Espace entre le texte et le Divider
                  SizedBox(width: 10.0), // Ajustez la valeur selon vos besoins
                  // Divider vertical
                  Expanded(
                    child: Divider(
                      color: Colors.white, // Couleur de la ligne
                      thickness: 2.0, // Épaisseur de la ligne
                      height: 20.0, // Espace vertical autour de la ligne
                    ),
                  ),
                ],
              ),
            ),
           CustomRadioButton(),
          ],
          
        ));
  }
}

class CustomRadioButton extends StatefulWidget {
  @override
  _CustomRadioButtonState createState() => _CustomRadioButtonState();
}

class _CustomRadioButtonState extends State<CustomRadioButton> {
  String? _selectedFormat;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.center,
      children: [
        _buildRadioTile("PDF", Icons.picture_as_pdf),
        _buildRadioTile("DOCX", Icons.article),
        _buildRadioTile("TXT", Icons.text_snippet),
        _buildSendButton(),
      ],
    );
  }

  Widget _buildRadioTile(String value, IconData icon) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 40.0, vertical: 20.0),
      child: Container(
        decoration: BoxDecoration(
          color: Colors.grey[900], // Couleur de fond sombre
          borderRadius: BorderRadius.circular(15.0), // Arrondi
          border: Border.all(
            color: _selectedFormat == value ? Colors.blue : Colors.grey[700]!, // Bordure active
            width: 1.5,
          ),
        ),
        child: RadioListTile<String>(
          title: Row(
            children: [
              Icon(icon, color: Colors.white), // Icône du format
              const SizedBox(width: 10), // Espacement
              Text(
                value,
                style: const TextStyle(color: Colors.white, fontSize: 18, fontWeight: FontWeight.w500),
              ),
            ],
          ),
          value: value,
          groupValue: _selectedFormat,
          onChanged: (String? newValue) {
            setState(() {
              _selectedFormat = newValue;
            });
          },
          activeColor: Colors.grey, // Couleur du cercle sélectionné
          controlAffinity: ListTileControlAffinity.trailing, // Place le bouton radio à droite
        ),
      ),
    );
  }

   Widget _buildSendButton() {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 40.0, vertical: 20.0),
      child: SizedBox(
        width: double.infinity,
        child: ElevatedButton(
          style: ElevatedButton.styleFrom(
            backgroundColor: Colors.white,
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(15.0),
            ),
            padding: const EdgeInsets.symmetric(vertical: 15.0),
          ),
          onPressed: () {
            // Action du bouton
          },
          child: const Text(
            "Envoyer",
            style: TextStyle(color: Colors.black, fontSize: 18, fontWeight: FontWeight.w500),
            textAlign: TextAlign.center,
          ),
        ),
      ),
    );
  }
}
